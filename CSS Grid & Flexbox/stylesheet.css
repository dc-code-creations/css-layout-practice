/* IMPORTS */
@import url('https://fonts.googleapis.com/css?family=Montserrat:400,500,600,700');

/* COLORS */


nav {
    background-color: plum;
}

.logo {
    background-color: orange;
}

nav ul li {
    background-color: lightblue;
}

.hero {
    background-color: cadetblue;
}
.main {
    background-color: yellow;
}

.sidebar {
    background-color: green;
    flex: 1;
}

.extra {
    background-color: chocolate;
}

.related-imgs {
    background-color: darkslateblue;
}

.related-posts {
    background-color: maroon;
}

body {
    background-color: red;
    font-family: "Montserrat", sans-serif;
    font-weight: 400;
}

footer {
    background-color: lightgreen;
}


/* IMPLEMENT W/ FLEXBOX & GRID */

.container {
    max-width: 1250px;
    margin: 0 auto;
    padding: 0 60px;

    display: grid;
    grid-template-columns: .4fr .3fr .3fr;

    /* might not need to set row heights here; can instead set them individually in each section
           - might be more responsive that way?
           - or maybe the content in the box is what determines the height of each section? */

    /* grid-template-rows: .3fr 1fr .5fr .7fr 1fr .3fr; */

    column-gap: 10px;
    row-gap: 15px;
    /* grid-template-areas: 
            "header header header"
            "hero main main"
            "sidebar extra extra"
            "rel-img rel-img rel-posts"
            "footer footer footer"; */

    /* we don't need to define the above grid specifications because we are manually setting the 
       columns and rows via the grid template rows and columns properties and then define which 
       rows and columns each section spans manually via their respective selectors */
}

.header {
    /* grid-area: header; */
    /* display: grid; */
    /* grid-template-columns: 1fr 1fr; */

    /* we don't need to define the above grid specifications because we are setting the block 
       sizes via the grid columns and rows properties */

    grid-column-start: 1;
    grid-column-end: 4;
    grid-row-start: 1;
    grid-row-end: 2;

    color: #9f9c9c;
    text-transform: uppercase;
    border-bottom: 2px solid #b0e0ea;
    padding: 20px 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.header nav ul {
    display: flex;
    list-style-type: none;
}

.header nav li {
    margin-right: 15px;
}


.hero {
    /* grid-column-start: 1;
    grid-column-end: 2;
    grid-row-start: 2;
    grid-row-end: 3; */

    /* shorthand for the above */
    grid-column: 1 / 2;
    grid-row: 2 / 3;

    /* setting section height here instead of using the grid-template-rows property */
    min-height: 300px;
}

.main {
    grid-column: 2 / 4;
    grid-row: 2 / 4;
}

.sidebar {
    grid-column: 1 / 2;
    grid-row: 3 / 5;
}

.extra {
    grid-column: 2 / 4;
    grid-row: 4 / 5;

    padding: 1rem;
    display: flex;
    flex-wrap: wrap;
    border: 1px solid #ececec;
}

.related-imgs {
    grid-column: 1 / 3;
    grid-row: 5 / 6;

    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 1rem;
}

.related-imgs .icon {
    background-color: white;
    flex: 1 1 150px;
}

.related-imgs .icon img {
    /* this line keeps the images from extending past the width of its section */
    max-width: 100%;
}

.related-posts {
    grid-column: 3 / 4;
    grid-row: 5 / 6;
}

footer {
    grid-column: 1 / 4;
    grid-row: 6 / 7;
}